/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.vfix.clientes;

import com.mycompany.vfix.General;
import com.mycompany.vfix.clientes.PanelClientes;
import java.awt.Frame;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo
 */
public class PanelClientes extends javax.swing.JPanel{

    FachadaClientes requests = new FachadaClientes();//A partir de acá se va a hacer el get request
    Frame general;//Frame padre
    List<Integer> idClientes = new ArrayList();//Lista para obtener los id's de los clientes
    public PanelClientes(Frame general) {
        initComponents();
        DefaultTableModel modelo = new DefaultTableModel();//Crear un modelo para que el jTable lo utilice
        //Campos a agregar al modelo
        modelo.addColumn("Nombre");
        modelo.addColumn("Teléfono");
        modelo.addColumn("Nit");
        modelo.addColumn("Cumpleaños");
        modelo.addColumn("Estrellas");
        modelo.addColumn("Correo");
        modelo.addColumn("Dirección");
        jTable1.setModel(modelo); //Agregar el modelo a la tabla
        requests.get(modelo, "", true, idClientes, rbCF.isSelected()); //Hacer un GET para mostrar a todos los clientes disponibles
        rbNombre.setSelected(true);//Mostrar de entrada todos los clientes habilitados
        rbCF.setVisible(false);
        rbCF.setEnabled(false);
        activarBotones(false);
        this.general = general;
        anadirListenerAlModelo(jTable1);
    }
    //Listener para accionar botones al hacer doble click a una fila del JTable
    private void anadirListenerAlModelo(JTable tabla) {
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 2) {
                    activarBotones(true);
                }
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnDeshabilitar = new javax.swing.JButton();
        rbNit = new javax.swing.JRadioButton();
        rbNombre = new javax.swing.JRadioButton();
        rbCF = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator2.setBackground(new java.awt.Color(54, 159, 128));
        jSeparator2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 410, 11));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(54, 159, 128));
        jLabel1.setText("Clientes");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 10, -1, -1));

        btnAgregar.setBackground(new java.awt.Color(26, 46, 70));
        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("+ Nuevo Cliente");
        btnAgregar.setBorder(null);
        btnAgregar.setBorderPainted(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(819, 22, 193, 46));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        txtFiltro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFiltro.setBorder(null);
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFiltroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });
        add(txtFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 410, 43));

        jSeparator3.setBackground(new java.awt.Color(54, 159, 128));
        jSeparator3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 74, 1080, 12));

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTable1MouseDragged(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 850, 161));

        btnModificar.setBackground(new java.awt.Color(26, 46, 70));
        btnModificar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setBorder(null);
        btnModificar.setBorderPainted(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(541, 434, 115, 38));

        btnDeshabilitar.setBackground(new java.awt.Color(26, 46, 70));
        btnDeshabilitar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnDeshabilitar.setForeground(new java.awt.Color(255, 255, 255));
        btnDeshabilitar.setText("Eliminar");
        btnDeshabilitar.setBorder(null);
        btnDeshabilitar.setBorderPainted(false);
        btnDeshabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshabilitarActionPerformed(evt);
            }
        });
        add(btnDeshabilitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(666, 434, 107, 38));

        rbNit.setBackground(new java.awt.Color(255, 255, 255));
        rbNit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbNit.setForeground(new java.awt.Color(54, 159, 128));
        rbNit.setText("Nit");
        rbNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNitActionPerformed(evt);
            }
        });
        add(rbNit, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 190, -1, -1));

        rbNombre.setBackground(new java.awt.Color(255, 255, 255));
        rbNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbNombre.setForeground(new java.awt.Color(54, 159, 128));
        rbNombre.setText("Nombre");
        rbNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNombreActionPerformed(evt);
            }
        });
        add(rbNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, -1, -1));

        rbCF.setBackground(new java.awt.Color(255, 255, 255));
        rbCF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbCF.setForeground(new java.awt.Color(54, 159, 128));
        rbCF.setText("Buscar c/f");
        rbCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCFActionPerformed(evt);
            }
        });
        add(rbCF, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    //Mostrar form para agregar a un nuevo cliente
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        AgregarCliente nuevoCliente=new AgregarCliente(general, true);
        nuevoCliente.setVisible(true);
        requests.get((DefaultTableModel)jTable1.getModel(), txtFiltro.getText(), rbNombre.isSelected(), idClientes, rbCF.isSelected());
        activarBotones(false);
    }//GEN-LAST:event_btnAgregarActionPerformed
    //Validar en el filtro el ingreso sólo de letras y espacios (si es nombre) y de dígitos y guiones (si es nit)
    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        char validacion = evt.getKeyChar();
        if (rbNombre.isSelected())
        {
            if (txtFiltro.getText().length() > 55 || (!Character.isLetter(validacion) && validacion != ' '))
                evt.consume();
        }
        else
        {
            if (txtFiltro.getText().length() > 16 || (!Character.isDigit(validacion) && validacion != '-'))
                evt.consume();
        }
    }//GEN-LAST:event_txtFiltroKeyTyped

    private void txtFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyPressed
        
    }//GEN-LAST:event_txtFiltroKeyPressed
    //Accionar el filtro cuando el campo de filtro esté siendo utilizado
    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        requests.get(modelo, txtFiltro.getText(), rbNombre.isSelected(), idClientes, rbCF.isSelected());
    }//GEN-LAST:event_txtFiltroKeyReleased
    //Manejo de los radiobuttons de forma correcta (al activarse uno, desactiva el otro):
    private void rbNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNombreActionPerformed
        if (rbNombre.isSelected())
        {
            activarBotones(false);
            rbNit.setSelected(false);
            txtFiltro.setText("");
            txtFiltro.setEnabled(true);
            //Manipular opción de filtrado de consumidores finales
            rbCF.setEnabled(false);
            rbCF.setVisible(false);
            rbCF.setSelected(false);
        }  
        if (!rbNombre.isSelected())
            rbNombre.setSelected(true);
        
        requests.get((DefaultTableModel)jTable1.getModel(), txtFiltro.getText(), true, idClientes, rbCF.isSelected());
    }//GEN-LAST:event_rbNombreActionPerformed
    //Manejo de los radiobuttons de forma correcta (al activarse uno, desactiva el otro):
    private void rbNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNitActionPerformed
        if (rbNit.isSelected())
        {
            activarBotones(false);
            rbNombre.setSelected(false);
            txtFiltro.setText("");
            rbCF.setEnabled(true);
            rbCF.setVisible(true);
            rbCF.setSelected(false);
        }
        if (!rbNit.isSelected())
            rbNit.setSelected(true);
        
        requests.get((DefaultTableModel)jTable1.getModel(), txtFiltro.getText(), false, idClientes, rbCF.isSelected());
    }//GEN-LAST:event_rbNitActionPerformed
    //Accionar botón modificar
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        ModificarCliente modificarCliente = new ModificarCliente(general, true, idClientes.get(jTable1.getSelectedRow()), obtenerCliente());
        modificarCliente.setVisible(true);
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        int seleccionado = idClientes.get(jTable1.getSelectedRow());
        requests.get(modelo, txtFiltro.getText(), rbNombre.isSelected(), idClientes, rbCF.isSelected());
        activarBotones(false);
    }//GEN-LAST:event_btnModificarActionPerformed
    //Este botón sirve para eliminar a un cliente
    private void btnDeshabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshabilitarActionPerformed
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar a este usuario?") == JOptionPane.YES_OPTION)
        {
            DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
            int seleccionado = idClientes.get(jTable1.getSelectedRow());
            requests.delete(seleccionado);
            requests.get(modelo, txtFiltro.getText(), rbNombre.isSelected(), idClientes, rbCF.isSelected());
            activarBotones(false);
            JOptionPane.showMessageDialog(null, "Cliente eliminado con éxito");
        }
    }//GEN-LAST:event_btnDeshabilitarActionPerformed

    private void rbCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCFActionPerformed
        if (rbCF.isSelected())
        {
            txtFiltro.setEnabled(false);
            activarBotones(false);
        }
        else
        {
            txtFiltro.setEnabled(true);
            activarBotones(false);
        }
            
        requests.get((DefaultTableModel)jTable1.getModel(), txtFiltro.getText(), false, idClientes, rbCF.isSelected());
    }//GEN-LAST:event_rbCFActionPerformed

    private void jTable1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseDragged
        
    }//GEN-LAST:event_jTable1MouseDragged

    //Crear un objeto de tipo Cliente
    private Cliente obtenerCliente()
    {
        Cliente cliente = new Cliente();
        cliente.setNombre(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 0)));
        cliente.setTelefono(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 1)));
        cliente.setNit(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 2)));
        cliente.setCumpleanios(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 3)));
        cliente.setEstrellas(Integer.parseInt(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 4))));
        cliente.setCorreo(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 5)));
        cliente.setDireccion(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 6)));
        
        return cliente;
    }
    
    //Activar o desactivar los botones de modificar y eliminar según sean necesarios
    private void activarBotones(boolean activados)
    {
        btnDeshabilitar.setEnabled(activados);
        btnModificar.setEnabled(activados);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDeshabilitar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rbCF;
    private javax.swing.JRadioButton rbNit;
    private javax.swing.JRadioButton rbNombre;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
