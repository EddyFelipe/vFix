/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import requests.EstructuraPost;
import requests.Requests;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import requestget.GetCategoria;
import campos.Categoria;
import com.sun.glass.events.KeyEvent;
import java.awt.BorderLayout;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FilenameUtils;
import org.apache.http.entity.mime.content.FileBody;


/**
 *
 * @author User
 */
public class FInventario extends javax.swing.JPanel {
    File archivo;
    Requests requests = new Requests();
    List<EstructuraPost> postCategoria = new ArrayList<>();
    List<EstructuraPost> postInventario = new ArrayList<>();
    List<Categoria> datosCategoria = new ArrayList<>();
    GetCategoria categoria = new GetCategoria();
    List<String> variablesInventario = new ArrayList<>();
    List<EstructuraPost> imagenes = new ArrayList<>();
    int contImagenes = 0;
    int imagenActual = 0;
    //List<FileBody> imagenes = new ArrayList<>();
    /**
     * Creates new form FInventario
     */
    public FInventario() {
        initComponents();
        inicializarvarInventario();
        inicializarEstructuraCategoria();
        inicializarEstructuraInventario();
        datosCategoria = (List<Categoria>)categoria.get("http://localhost:8000/api/categorias/");
        inicializarcbCategoria();
        lblImagenesCont.setText(contImagenes + " de " + contImagenes + " imágenes agregadas");
    }
    
    private void inicializarvarInventario()
    {
        variablesInventario.add("codigo");
        variablesInventario.add("nombre");
        variablesInventario.add("color");
        variablesInventario.add("modelo");
        variablesInventario.add("marca");
        variablesInventario.add("tipo");
        variablesInventario.add("descripcion");
        variablesInventario.add("existencia");
        variablesInventario.add("precio");
        variablesInventario.add("categoriaId");
    }
    
    private void inicializarcbCategoria()
    {
        cbCategoria.addItem("Seleccionar...");
        for (int i = 0; i < datosCategoria.size(); i++)
            cbCategoria.addItem(datosCategoria.get(i).getCategoria());
    }
    private void inicializarEstructuraCategoria()
    {
        EstructuraPost estructuraPost = new EstructuraPost();
        estructuraPost.setVariable("nombre");
        postCategoria.add(estructuraPost);
    }
    
    private void inicializarEstructuraInventario()
    {
        for (int i = 0; i < 10; i++)
        {
            EstructuraPost estructuraPost = new EstructuraPost();
            estructuraPost.setVariable(variablesInventario.get(i));
            postInventario.add(estructuraPost);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGeneral = new javax.swing.JPanel();
        lblCategoria = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblModelo = new javax.swing.JLabel();
        lblImagenesCont = new javax.swing.JLabel();
        sepColor = new javax.swing.JSeparator();
        tfCodigo = new javax.swing.JTextField();
        sepCodigo = new javax.swing.JSeparator();
        tfNombre = new javax.swing.JTextField();
        sepNombre = new javax.swing.JSeparator();
        tfModelo = new javax.swing.JTextField();
        sepModelo = new javax.swing.JSeparator();
        tfColor = new javax.swing.JTextField();
        lblImagen = new javax.swing.JLabel();
        tfMarca = new javax.swing.JTextField();
        sepMarca = new javax.swing.JSeparator();
        lblTipo = new javax.swing.JLabel();
        tfTipo = new javax.swing.JTextField();
        sepTipo = new javax.swing.JSeparator();
        lblDescripcion = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        sepDescripcion = new javax.swing.JSeparator();
        lblExistencia = new javax.swing.JLabel();
        tfExistencia = new javax.swing.JTextField();
        sepExistencia = new javax.swing.JSeparator();
        lblPrecio = new javax.swing.JLabel();
        tfPrecio = new javax.swing.JTextField();
        sepPrecio = new javax.swing.JSeparator();
        btnIngresar = new javax.swing.JButton();
        btnElegirImg = new javax.swing.JButton();
        lblSelImg = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox<>();
        btnEliCategoria = new javax.swing.JButton();
        btnModCategoria = new javax.swing.JButton();
        btnAgrCategoria = new javax.swing.JButton();
        btnAdelante = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        btnEliminarImagen = new javax.swing.JButton();
        lblColor1 = new javax.swing.JLabel();
        btnAgregarImagen1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        pnlGeneral.setBackground(new java.awt.Color(34, 51, 59));
        pnlGeneral.setMinimumSize(new java.awt.Dimension(1280, 680));
        pnlGeneral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCategoria.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblCategoria.setForeground(new java.awt.Color(255, 255, 255));
        lblCategoria.setText("Categoría *");
        pnlGeneral.add(lblCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));

        lblCodigo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblCodigo.setForeground(new java.awt.Color(255, 255, 255));
        lblCodigo.setText("Código *");
        pnlGeneral.add(lblCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        lblNombre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setText("Nombre *");
        pnlGeneral.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, -1, -1));

        lblModelo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblModelo.setForeground(new java.awt.Color(255, 255, 255));
        lblModelo.setText("Modelo *");
        pnlGeneral.add(lblModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, -1, -1));

        lblImagenesCont.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblImagenesCont.setForeground(new java.awt.Color(255, 255, 255));
        lblImagenesCont.setText("Contador");
        pnlGeneral.add(lblImagenesCont, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 210, -1));
        pnlGeneral.add(sepColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, 200, -1));

        tfCodigo.setBackground(new java.awt.Color(34, 51, 59));
        tfCodigo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfCodigo.setForeground(new java.awt.Color(255, 255, 255));
        tfCodigo.setBorder(null);
        tfCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCodigoKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 200, -1));
        pnlGeneral.add(sepCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 200, -1));

        tfNombre.setBackground(new java.awt.Color(34, 51, 59));
        tfNombre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfNombre.setForeground(new java.awt.Color(255, 255, 255));
        tfNombre.setBorder(null);
        tfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNombreKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 200, -1));
        pnlGeneral.add(sepNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 200, 10));

        tfModelo.setBackground(new java.awt.Color(34, 51, 59));
        tfModelo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfModelo.setForeground(new java.awt.Color(255, 255, 255));
        tfModelo.setBorder(null);
        tfModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfModeloKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfModeloKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 200, -1));
        pnlGeneral.add(sepModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 200, -1));

        tfColor.setBackground(new java.awt.Color(34, 51, 59));
        tfColor.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfColor.setForeground(new java.awt.Color(255, 255, 255));
        tfColor.setBorder(null);
        tfColor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfColorKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfColorKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 200, -1));

        lblImagen.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblImagen.setForeground(new java.awt.Color(255, 255, 255));
        lblImagen.setText("Imagen");
        pnlGeneral.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, -1, -1));

        tfMarca.setBackground(new java.awt.Color(34, 51, 59));
        tfMarca.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfMarca.setForeground(new java.awt.Color(255, 255, 255));
        tfMarca.setBorder(null);
        tfMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMarcaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMarcaKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 100, 200, -1));
        pnlGeneral.add(sepMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 120, 200, -1));

        lblTipo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(255, 255, 255));
        lblTipo.setText("Tipo *");
        pnlGeneral.add(lblTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 180, -1, -1));

        tfTipo.setBackground(new java.awt.Color(34, 51, 59));
        tfTipo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfTipo.setForeground(new java.awt.Color(255, 255, 255));
        tfTipo.setBorder(null);
        tfTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTipoActionPerformed(evt);
            }
        });
        tfTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTipoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfTipoKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 180, 200, -1));
        pnlGeneral.add(sepTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 200, 200, -1));

        lblDescripcion.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        lblDescripcion.setText("Descripción *");
        pnlGeneral.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 260, -1, -1));

        tfDescripcion.setBackground(new java.awt.Color(34, 51, 59));
        tfDescripcion.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        tfDescripcion.setBorder(null);
        tfDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDescripcionKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 260, 200, -1));
        pnlGeneral.add(sepDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 280, 200, -1));

        lblExistencia.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblExistencia.setForeground(new java.awt.Color(255, 255, 255));
        lblExistencia.setText("Existencia *");
        pnlGeneral.add(lblExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 340, -1, -1));

        tfExistencia.setBackground(new java.awt.Color(34, 51, 59));
        tfExistencia.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfExistencia.setForeground(new java.awt.Color(255, 255, 255));
        tfExistencia.setBorder(null);
        tfExistencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfExistenciaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfExistenciaKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 340, 200, -1));
        pnlGeneral.add(sepExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 360, 200, -1));

        lblPrecio.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblPrecio.setForeground(new java.awt.Color(255, 255, 255));
        lblPrecio.setText("Precio *");
        pnlGeneral.add(lblPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 420, -1, -1));

        tfPrecio.setBackground(new java.awt.Color(34, 51, 59));
        tfPrecio.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tfPrecio.setForeground(new java.awt.Color(255, 255, 255));
        tfPrecio.setBorder(null);
        tfPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPrecioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPrecioKeyTyped(evt);
            }
        });
        pnlGeneral.add(tfPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 420, 200, -1));
        pnlGeneral.add(sepPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 440, 200, -1));

        btnIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Ingresar.png"))); // NOI18N
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, 310, 80));

        btnElegirImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Elegir imagen.png"))); // NOI18N
        btnElegirImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElegirImgActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnElegirImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, 140, 30));

        lblSelImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo imagen.png"))); // NOI18N
        pnlGeneral.add(lblSelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, 210, 160));

        lblMarca.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblMarca.setForeground(new java.awt.Color(255, 255, 255));
        lblMarca.setText("Marca *");
        pnlGeneral.add(lblMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, -1, -1));

        cbCategoria.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        cbCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoriaItemStateChanged(evt);
            }
        });
        cbCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbCategoriaMouseReleased(evt);
            }
        });
        cbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoriaActionPerformed(evt);
            }
        });
        cbCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbCategoriaKeyReleased(evt);
            }
        });
        pnlGeneral.add(cbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 200, 30));

        btnEliCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar categoría.png"))); // NOI18N
        btnEliCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliCategoriaActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnEliCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 80, 20));

        btnModCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificar categoría.png"))); // NOI18N
        btnModCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModCategoriaActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnModCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 80, 20));

        btnAgrCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Agregar.png"))); // NOI18N
        btnAgrCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgrCategoriaActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnAgrCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 80, 20));

        btnAdelante.setBackground(new java.awt.Color(226, 98, 75));
        btnAdelante.setForeground(new java.awt.Color(255, 255, 255));
        btnAdelante.setText(">");
        btnAdelante.setFocusPainted(false);
        btnAdelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdelanteActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnAdelante, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 220, -1, -1));

        btnAtras.setBackground(new java.awt.Color(226, 98, 75));
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setText("<");
        btnAtras.setBorderPainted(false);
        btnAtras.setFocusPainted(false);
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, -1, -1));

        btnEliminarImagen.setBackground(new java.awt.Color(226, 98, 75));
        btnEliminarImagen.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        btnEliminarImagen.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarImagen.setText("-");
        btnEliminarImagen.setFocusPainted(false);
        btnEliminarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImagenActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnEliminarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 330, 40, 30));

        lblColor1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblColor1.setForeground(new java.awt.Color(255, 255, 255));
        lblColor1.setText("Color *");
        pnlGeneral.add(lblColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, 57, -1));

        btnAgregarImagen1.setBackground(new java.awt.Color(226, 98, 75));
        btnAgregarImagen1.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        btnAgregarImagen1.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarImagen1.setText("+");
        btnAgregarImagen1.setFocusPainted(false);
        btnAgregarImagen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagen1ActionPerformed(evt);
            }
        });
        pnlGeneral.add(btnAgregarImagen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, 40, 30));

        jButton1.setText("Inventario disponible");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnlGeneral.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 30, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        if (tfCodigo.getText().length() > 0 && tfNombre.getText().length() > 0 && tfModelo.getText().length() > 0
        && tfColor.getText().length() > 0 && tfMarca.getText().length() > 0 && tfTipo.getText().length() > 0 && tfDescripcion.getText().length() > 0
        && tfExistencia.getText().length() > 0 && tfPrecio.getText().length() > 0 && cbCategoria.getSelectedIndex() > 0 )
        {
            if (imagenesInsertadas())
            {
                postInventario.get(0).setValor(tfCodigo.getText());
                postInventario.get(1).setValor(tfNombre.getText());
                postInventario.get(2).setValor(tfColor.getText());
                postInventario.get(3).setValor(tfModelo.getText());
                postInventario.get(4).setValor(tfMarca.getText());
                postInventario.get(5).setValor(tfTipo.getText());
                postInventario.get(6).setValor(tfDescripcion.getText());
                postInventario.get(7).setValor(tfExistencia.getText());
                postInventario.get(8).setValor(tfPrecio.getText());
                postInventario.get(9).setValor(String.valueOf(datosCategoria.get(cbCategoria.getSelectedIndex() - 1).getId()));
                for (int i = 0; i < imagenes.size(); i++) {
                    postInventario.add(imagenes.get(i));
                }
                if (requests.post("http://localhost:8000/api/productos/", postInventario)
                        .equals("{\"mensaje\":\"El código ya existe\"}"))
                {
                    JOptionPane.showMessageDialog(null, "El código ingresado ya existe");
                }
                else
                {
                    tfCodigo.setText("");
                    tfNombre.setText("");
                    tfColor.setText("");
                    tfModelo.setText("");
                    tfMarca.setText("");
                    tfTipo.setText("");
                    tfDescripcion.setText("");
                    tfExistencia.setText("");
                    tfPrecio.setText("");
                    cbCategoria.setSelectedIndex(0);
                    Image img = new ImageIcon("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes"
                            + File.separator + "Fondo imagen.png").getImage();
                    ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                    lblSelImg.setIcon(img2);
                    while (imagenes.size() > 0) {
                        imagenes.remove(0);
                        postInventario.remove(postInventario.size() - 1);
                    }
                    imagenActual = contImagenes = 0;
                    lblImagenesCont.setText(imagenActual + " de " + contImagenes + " imágenes agregadas");
                    JOptionPane.showMessageDialog(null, "Producto ingresado satisfactoriamente");
                }
            }
            else
                JOptionPane.showMessageDialog(null, imagenesSinInsertar());
        }
        else
            JOptionPane.showMessageDialog(null, "Por favor rellene todos los campos obligatorios:");
    }//GEN-LAST:event_btnIngresarActionPerformed

    private String imagenesSinInsertar()
    {
        List<Integer> posiciones = new ArrayList<>();
        String resultado = "";
        boolean encontrado = false;
        for (int i = 0; i < imagenes.size(); i++)
        {
            if (imagenes.get(i).getValor().toString()
                    .equals("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png")
                    )
            posiciones.add(i+1);
        }
            
        
        if (posiciones.size() == 1)
                resultado += "Hace falta insertar la imagen " + posiciones.get(0);
        else
        {
            resultado += "Hace falta insertar las imágenes ";
            while (posiciones.size() > 0)
            {
                if (posiciones.size() > 1)
                    resultado += posiciones.get(0) + ", ";
                else
                    resultado += posiciones.get(0);
                posiciones.remove(0);
            }
        }
        return resultado;
    }
    private boolean imagenesInsertadas()
    {
        for (int i = 0; i < imagenes.size(); i++)
        {
            if (imagenes.get(i).getValor().toString().equals("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png"))
                return false;
        }
        return true;
    }
    
    private void limpiarjComboBox()
    {
        tfCodigo.setText("");
        tfNombre.setText("");
        tfModelo.setText("");
        tfColor.setText("");
        tfMarca.setText("");
        
    }
    
    
    private void cbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoriaActionPerformed

    }//GEN-LAST:event_cbCategoriaActionPerformed

    private void tfCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCodigoKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'A')||(c > 'Z'))
        {
            if ((c < '0') || (c > '9'))
                evt.consume();
        }
            

        if (tfCodigo.getText().length()>20)
            evt.consume();
    }//GEN-LAST:event_tfCodigoKeyTyped

    private void tfNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombreKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A')|c > 'Z')
        {
            if ((c != ' ') && (c != 'á') && (c != 'é') && (c != 'í') && (c != 'ó') && (c != 'ú'))
                evt.consume();
        }

        if (tfNombre.getText().length()>55)
            evt.consume();
    }//GEN-LAST:event_tfNombreKeyTyped

    private void tfModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfModeloKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A')|c > 'Z')
        {
            if ((c != ' ') && (c != 'á') && (c != 'é') && (c != 'í') && (c != 'ó') && (c != 'ú'))
            {
                if ((c < '0') || (c > '9'))
                    evt.consume();
            }
        }

        if (tfModelo.getText().length()>45)
            evt.consume();
    }//GEN-LAST:event_tfModeloKeyTyped

    private void tfColorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfColorKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A')|c > 'Z')
        {
            if ((c != ' ') && (c != 'á') && (c != 'é') && (c != 'í') && (c != 'ó') && (c != 'ú'))
                evt.consume();
        }

        if (tfColor.getText().length()>35)
            evt.consume();
    }//GEN-LAST:event_tfColorKeyTyped

    private void tfMarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMarcaKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A')|c > 'Z')
        {
            if ((c != ' ') && (c != 'á') && (c != 'é') && (c != 'í') && (c != 'ó') && (c != 'ú'))
            {
                if ((c < '0') || (c > '9'))
                    evt.consume();
            }
        }

        if (tfMarca.getText().length()>45)
            evt.consume();
    }//GEN-LAST:event_tfMarcaKeyTyped

    private void tfTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTipoActionPerformed

    private void tfTipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTipoKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A')|c > 'Z')
        {
            if ((c != ' ') && (c != 'á') && (c != 'é') && (c != 'í') && (c != 'ó') && (c != 'ú'))
            {
                if ((c < '0') || (c > '9'))
                    evt.consume();
            }
        }

        if (tfTipo.getText().length()>45)
            evt.consume();
    }//GEN-LAST:event_tfTipoKeyTyped

    private void tfDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescripcionKeyTyped
        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A')|c > 'Z')
        {
            if ((c != ' ') && (c != 'á') && (c != 'é') && (c != 'í') && (c != 'ó') && (c != 'ú'))
            {
                if ((c < '0') || (c > '9'))
                    evt.consume();
            }
        }

        if (tfDescripcion.getText().length()>200)
            evt.consume();
    }//GEN-LAST:event_tfDescripcionKeyTyped

    private void tfExistenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfExistenciaKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
                evt.consume();

        if (tfExistencia.getText().length()>10)
            evt.consume();
    }//GEN-LAST:event_tfExistenciaKeyTyped

    private void tfPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecioKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
        {
            if (c != '.')
                evt.consume();
        }

        if (tfPrecio.getText().length()>10)
            evt.consume();
    }//GEN-LAST:event_tfPrecioKeyTyped

    private void btnElegirImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElegirImgActionPerformed
        if (contImagenes > 0)
        {
            JFileChooser filechooser = new JFileChooser();
            FileFilter filtradorArchivo = new FileNameExtensionFilter("Imágenes", new String[]{"jpg", "jpeg", "png"});
            filechooser.setDialogTitle("Buscar imagen");
            filechooser.setFileFilter(filtradorArchivo);
            if (filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File archivo = new File(filechooser.getSelectedFile().toString());
                if (FilenameUtils.getExtension(archivo.getAbsolutePath()).equals("jpg")
                        || FilenameUtils.getExtension(archivo.getAbsolutePath()).equals("jpeg")
                        || FilenameUtils.getExtension(archivo.getAbsolutePath()).equals("png")) {
                    this.archivo = archivo;
                    System.out.println(archivo.toString());
                    Image img = new ImageIcon(archivo.toString()).getImage();
                    ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                    lblSelImg.setIcon(img2);
                    FileBody imagen = new FileBody(archivo);
                    if (imagen != null) {
                        imagenes.get(imagenActual - 1).setValor(imagen);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese una imagen");
                }
            }
        }   
        else
                JOptionPane.showMessageDialog(null, "Todavía no se ha agregado ninguna imagen");
    }//GEN-LAST:event_btnElegirImgActionPerformed

    private void cbCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoriaItemStateChanged
        
    }//GEN-LAST:event_cbCategoriaItemStateChanged

    private void btnEliCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliCategoriaActionPerformed
        if (cbCategoria.getSelectedIndex() > 0)
        {
            int input = JOptionPane.showConfirmDialog(null, "¿Eliminar categoría?","Eliminar",JOptionPane.OK_CANCEL_OPTION);
            if (input == 0)
            {
                requests.delete("http://localhost:8000/api/categorias/" + datosCategoria.get(cbCategoria.getSelectedIndex()-1)
                        .getId() + "/");
                while (cbCategoria.getItemCount() > 0)
                    cbCategoria.removeItemAt(0);
                datosCategoria = (List<Categoria>)categoria.get("http://localhost:8000/api/categorias/");
                cbCategoria.setSelectedIndex(-1);
                JOptionPane.showMessageDialog(null, "Categoría suprimida con éxito");
                inicializarcbCategoria();
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Seleccione una categoría.");
    }//GEN-LAST:event_btnEliCategoriaActionPerformed

    private void cbCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbCategoriaKeyReleased
 
    }//GEN-LAST:event_cbCategoriaKeyReleased

    private void cbCategoriaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCategoriaMouseReleased
        
    }//GEN-LAST:event_cbCategoriaMouseReleased

    private void btnModCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModCategoriaActionPerformed
        if (cbCategoria.getSelectedIndex() > 0)
        {
            String respuesta = "";
            respuesta = JOptionPane.showInputDialog(null, "Ingrese el nuevo valor");
            if (respuesta != null) {
                if (!respuesta.equals("")) {
                    postCategoria.get(0).setValor(respuesta);
                    requests.put("http://localhost:8000/api/categorias/"+ datosCategoria.get(cbCategoria.getSelectedIndex()-1)
                        .getId() + "/", postCategoria);
                    cbCategoria.setSelectedIndex(-1);
                    datosCategoria = (List<Categoria>) categoria.get("http://localhost:8000/api/categorias/");
                    while (cbCategoria.getItemCount() > 0) {
                        cbCategoria.removeItemAt(0);
                    }
                    JOptionPane.showMessageDialog(null, "Categoría modificada con éxito");
                    inicializarcbCategoria();
                }
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Por favor seleccione una categoría");
        
    }//GEN-LAST:event_btnModCategoriaActionPerformed

    private void btnAgrCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgrCategoriaActionPerformed
        String respuesta = "";
        respuesta = JOptionPane.showInputDialog(null, "Ingrese una nueva categoría");
        if (respuesta != null) {
            if (!respuesta.equals("")) {
                cbCategoria.setSelectedIndex(-1);
                postCategoria.get(0).setValor(respuesta);
                requests.post("http://localhost:8000/api/categorias/", postCategoria);
                datosCategoria = (List<Categoria>) categoria.get("http://localhost:8000/api/categorias/");
                while (cbCategoria.getItemCount() > 0) {
                    cbCategoria.removeItemAt(0);
                }
                JOptionPane.showMessageDialog(null, "Categoría ingresada con éxito");
                inicializarcbCategoria();
            }
        }
    }//GEN-LAST:event_btnAgrCategoriaActionPerformed

    private void btnEliminarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImagenActionPerformed
        if (imagenActual > 0)
            imagenes.remove(imagenActual - 1);
        if (imagenActual > 1) {
            imagenActual--;
        }
        if (contImagenes > 0)
            contImagenes--;
        if (contImagenes == 0 && imagenActual == 1) {
            imagenActual--;
        }
        if (contImagenes == 0)
        {
            Image img = new ImageIcon("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes"
                    + File.separator + "Fondo imagen.png").getImage();
            ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
            lblSelImg.setIcon(img2);
        }
        lblImagenesCont.setText(imagenActual + " de " + contImagenes + " imágenes agregadas");
        if (imagenActual > 0)
        {
            if (!imagenes.get(imagenActual - 1).getValor().toString()
                    .equals("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes"
                            + File.separator + "Fondo imagen.png")) {
                FileBody imagenObtenida = (FileBody) imagenes.get(imagenActual - 1).getValor();
                Image img = new ImageIcon(imagenObtenida.getFile().toString()).getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                lblSelImg.setIcon(img2);
            } else {
                Image img = new ImageIcon("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes"
                        + File.separator + "Fondo imagen.png").getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                lblSelImg.setIcon(img2);
            }
        }
        
    }//GEN-LAST:event_btnEliminarImagenActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        if (imagenActual > 1)
        {
            imagenActual--;
            lblImagenesCont.setText(imagenActual + " de " + contImagenes + " imágenes agregadas");
            if (!imagenes.get(imagenActual - 1).getValor().toString()
                    .equals("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png")
                    )
            {
                FileBody imagenObtenida = (FileBody) imagenes.get(imagenActual - 1).getValor();
                Image img = new ImageIcon(imagenObtenida.getFile().toString()).getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                lblSelImg.setIcon(img2);
            }
            else
            {
                Image img = new ImageIcon("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                    File.separator + "Fondo imagen.png").getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                lblSelImg.setIcon(img2);
            }
        }
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAdelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdelanteActionPerformed
        if (imagenActual < contImagenes)
        {
            imagenActual++;
            lblImagenesCont.setText(imagenActual + " de " + contImagenes + " imágenes agregadas");
            if (!imagenes.get(imagenActual - 1).getValor().toString()
                    .equals("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png")
                    )
            {
                FileBody imagenObtenida = (FileBody) imagenes.get(imagenActual - 1).getValor();
                Image img = new ImageIcon(imagenObtenida.getFile().toString()).getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                lblSelImg.setIcon(img2);
            }
            else
            {
                Image img = new ImageIcon("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png").getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
                lblSelImg.setIcon(img2);
            }
            
            
        }
    }//GEN-LAST:event_btnAdelanteActionPerformed

    private void btnAgregarImagen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagen1ActionPerformed
        Image img = new ImageIcon("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png").getImage();
        ImageIcon img2 = new ImageIcon(img.getScaledInstance(lblSelImg.getWidth(), lblSelImg.getHeight(), Image.SCALE_SMOOTH));
        lblSelImg.setIcon(img2);
        EstructuraPost estructuraPost = new EstructuraPost();
        estructuraPost.setVariable("imagenes");
        estructuraPost.setValor("src" + File.separator + "main" + File.separator + "resources" + File.separator + "imagenes" +
                File.separator + "Fondo imagen.png");
        imagenes.add(estructuraPost);
        contImagenes ++;
        imagenActual = contImagenes;
        lblImagenesCont.setText(imagenActual + " de " + contImagenes + " imágenes agregadas");
    }//GEN-LAST:event_btnAgregarImagen1ActionPerformed

    private void tfCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCodigoKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfNombre.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfPrecio.requestFocus();
    }//GEN-LAST:event_tfCodigoKeyPressed

    private void tfNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombreKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfModelo.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfCodigo.requestFocus();
    }//GEN-LAST:event_tfNombreKeyPressed

    private void tfModeloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfModeloKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfColor.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfNombre.requestFocus();
    }//GEN-LAST:event_tfModeloKeyPressed

    private void tfColorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfColorKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfMarca.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfModelo.requestFocus();
    }//GEN-LAST:event_tfColorKeyPressed

    private void tfMarcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMarcaKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfTipo.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfColor.requestFocus();
    }//GEN-LAST:event_tfMarcaKeyPressed

    private void tfTipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTipoKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfDescripcion.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfMarca.requestFocus();
    }//GEN-LAST:event_tfTipoKeyPressed

    private void tfDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescripcionKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfExistencia.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfTipo.requestFocus();
    }//GEN-LAST:event_tfDescripcionKeyPressed

    private void tfExistenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfExistenciaKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfPrecio.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfDescripcion.requestFocus();
    }//GEN-LAST:event_tfExistenciaKeyPressed

    private void tfPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecioKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_ENTER))
            tfCodigo.requestFocus();
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
            tfExistencia.requestFocus();
    }//GEN-LAST:event_tfPrecioKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FModInventario inventario = new FModInventario();
        inventario.setSize(1280,680);
        inventario.setLocation(0, 0);
        this.removeAll();
        this.add(inventario,BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    String toBinary(byte[] bytes) {
        StringBuilder sb = new StringBuilder(bytes.length * Byte.SIZE);
        for (int i = 0; i < Byte.SIZE * bytes.length; i++) {
            sb.append((bytes[i / Byte.SIZE] << i % Byte.SIZE & 0x80) == 0 ? '0' : '1');
        }
        return sb.toString();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdelante;
    private javax.swing.JButton btnAgrCategoria;
    private javax.swing.JButton btnAgregarImagen1;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnElegirImg;
    private javax.swing.JButton btnEliCategoria;
    private javax.swing.JButton btnEliminarImagen;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnModCategoria;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblColor1;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblExistencia;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblImagenesCont;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblSelImg;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JPanel pnlGeneral;
    private javax.swing.JSeparator sepCodigo;
    private javax.swing.JSeparator sepColor;
    private javax.swing.JSeparator sepDescripcion;
    private javax.swing.JSeparator sepExistencia;
    private javax.swing.JSeparator sepMarca;
    private javax.swing.JSeparator sepModelo;
    private javax.swing.JSeparator sepNombre;
    private javax.swing.JSeparator sepPrecio;
    private javax.swing.JSeparator sepTipo;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfColor;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfExistencia;
    private javax.swing.JTextField tfMarca;
    private javax.swing.JTextField tfModelo;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfPrecio;
    private javax.swing.JTextField tfTipo;
    // End of variables declaration//GEN-END:variables
}
